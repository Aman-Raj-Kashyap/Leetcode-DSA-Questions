// https://leetcode.com/problems/best-time-to-buy-and-sell-stock/

--O(n)
class Solution {
    public int maxProfit(int[] prices) {
        int min=prices[0];
        int profit=0;
        
        for(int i=1;i<prices.length;i++){
            profit=Math.max(profit,prices[i]-min);
            min=Math.min(min,prices[i]);
        }
        return profit;
    }
}

--O(n2)
class Solution {
    public int maxProfit(int[] prices) {
        int min=prices[0];
        int profit=0;
        
        for(int i=1;i<prices.length;i++){
            for(int j=i;j>=0;j--){
                min=Math.min(min,prices[j]);
            }
            profit=Math.max(profit,prices[i]-min);
            if(profit<0) profit=0;
        }
        return profit;
    }
}
