// https://leetcode.com/problems/sort-colors/

--O(n)
class Solution {
    public void sortColors(int[] nums) {
        int low=0,mid=0,high=nums.length-1;
        int temp=0;
        while(mid<=high){
            switch(nums[mid]){
                case 0: temp=nums[low];
                        nums[low]=nums[mid];
                        nums[mid]=temp;
                        low++;mid++;
                        break;
                    
                case 1: mid++;
                        break;
                    
                case 2: temp=nums[high];
                        nums[high]=nums[mid];
                        nums[mid]=temp;
                        high--;
                        break;
            }
        }
    }
}


--O(2n)
class Solution {
    public void sortColors(int[] nums) {
        int zero=0,one=0,two=0;
        
        for(int i=0;i<nums.length;i++){
            if(nums[i]==0) zero++;
            else if(nums[i]==1) one++;
            else two++;
        }
        
        int i=0;
        while(zero>0){
            nums[i]=0;
            i++;zero--;
        }
        while(one>0){
            nums[i]=1;
            i++;one--;
        }
        while(two>0){
            nums[i]=2;
            i++;two--;
        }
    }
}


--O(nlogn)
class Solution {
    public void sortColors(int[] nums) {
        Arrays.sort(nums);
    }
}
