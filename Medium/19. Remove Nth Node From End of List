// https://leetcode.com/problems/remove-nth-node-from-end-of-list

-- O(n)
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) { 
        ListNode dummy=new ListNode();
        dummy.next=head;
        ListNode slow=dummy,fast=dummy;
        
        for(int i=0;i<n;i++){
            fast=fast.next;
        }
        
        while(fast.next!=null){
            fast=fast.next;
            slow=slow.next;
        }
        slow.next=slow.next.next;
        return dummy.next;
    }
}



-- O(2n)
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) { 
        int s=size(head)-n;
        if(s==0) return head=head.next;
        
        ListNode curr=head;
        for(int i=0;i<s-1;i++){
            curr=curr.next;
        }
        
        curr.next=curr.next.next;
        return head;
    }
    
    public int size(ListNode head){
        int size=0;
        
        while(head!=null){
            size++;
            head=head.next;
        }       
        return size;
    }
}



class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) { 
        if(head==null || head.next==null) return null;
        ListNode curr=head;
        
        int size=0;
        while(curr!=null){
            size++;
            curr=curr.next;
        }
        
        curr=head;
        int diff=size-n;
        if(diff>0){
            for(int i=0;i<diff-1;i++){
                curr=curr.next;
            }
            
            if(curr.next.next==null)
                curr.next=null;
            else
                curr.next=curr.next.next;
            return head;
        }
        else{
            return head.next;
        }
    }
}
